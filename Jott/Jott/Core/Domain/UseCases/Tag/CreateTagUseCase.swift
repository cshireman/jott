//
//  CreateTagUseCase.swift
//  Jott
//
//  Created by Chris Shireman on 5/15/25.
//


import Foundation

@MainActor
class CreateTagUseCase {
    @Injected(\.tagRepository) private var tagRepository: TagRepositoryProtocol
    
    func execute(name: String, colorHex: String? = nil, isAutoGenerated: Bool = false) async throws -> Tag {
        // Check if tag already exists
        if let existingTag = try await tagRepository.fetchTag(withName: name) {
            return existingTag
        }
        
        // Create new tag
        let newTag = Tag(
            name: name,
            colorHex: colorHex ?? generateRandomColorHex(),
            createdAt: Date(),
            usageCount: 0,
            isAutoGenerated: isAutoGenerated
        )
        
        try await tagRepository.saveTag(newTag)
        return newTag
    }
    
    private func generateRandomColorHex() -> String {
        let colors = [
            "#FF3B30", "#FF9500", "#FFCC00", "#34C759", "#5AC8FA",
            "#007AFF", "#5856D6", "#AF52DE", "#FF2D55", "#8E8E93"
        ]
        return colors[Int.random(in: 0..<colors.count)]
    }
}
